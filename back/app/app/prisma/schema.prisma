generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Authorization {
  wallet_id        String   @id @db.Char(20)
  nonce            Int
  nonce_expired_at DateTime @default(now()) @db.Timestamp(0)
  signature        String?  @db.Char(64)
  jwt              String?  @db.Text
}

model Category {
  category_id Int    @id @unique(map: "category_id_UNIQUE")
  name        String @db.VarChar(50)
  Show        Show[]
}

model Class {
  class_id Int    @id @unique(map: "class_id_UNIQUE")
  stage_id Int
  name     String @db.VarChar(45)
  price    Int
  Stage    Stage  @relation(fields: [stage_id], references: [stage_id], onDelete: NoAction, onUpdate: NoAction, map: "stage_id")
  Seat     Seat[]

  @@index([stage_id], map: "stage_id_idx")
}

model Profile {
  wallet_id   String   @id @unique(map: "wallet_id_UNIQUE") @db.Char(20)
  nickname    String   @db.VarChar(45)
  description String?  @db.Text
  created_at  DateTime @default(now()) @db.Timestamp(0)
  image_url   String?  @db.VarChar(255)
}

model Role {
  staff_id   Int
  show_id    Int
  occupation String @db.VarChar(45)
  Show       Show   @relation(fields: [show_id], references: [show_id], onDelete: NoAction, onUpdate: NoAction, map: "Role_ibfk_2")
  Staff      Staff  @relation(fields: [staff_id], references: [staff_id], onDelete: NoAction, onUpdate: NoAction, map: "Role_ibfk_1")

  @@id([staff_id, show_id])
  @@index([show_id], map: "show_id")
}

model Seat {
  seat_id  Int   @id @unique(map: "seat_id_UNIQUE")
  stage_id Int
  class_id Int
  row      Int?
  col      Int?
  Class    Class @relation(fields: [class_id], references: [class_id], onDelete: NoAction, onUpdate: NoAction, map: "Seat_ibfk_2")
  Stage    Stage @relation(fields: [stage_id], references: [stage_id], onDelete: NoAction, onUpdate: NoAction, map: "Seat_ibfk_1")

  @@index([class_id], map: "class_id")
  @@index([stage_id], map: "stage_id")
}

model Server_config {
  key   String  @id @db.VarChar(45)
  value String? @db.VarChar(45)
}

model Show {
  show_id     Int       @id
  category_id Int?
  name        String    @db.VarChar(45)
  description String?   @db.Text
  runningTime Int
  videoURL    String?   @db.VarChar(255)
  posterURL   String    @db.VarChar(255)
  Category    Category? @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction)
  Role        Role[]

  @@index([category_id], map: "category_id_idx")
}

model Staff {
  staff_id Int     @id @unique(map: "staff_id_UNIQUE")
  name     String  @db.VarChar(45)
  imageURL String? @db.VarChar(255)
  Role     Role[]
}

model Stage {
  stage_id  Int     @id
  name      String? @db.VarChar(45)
  address   String  @db.VarChar(255)
  latitude  Float
  longitude Float
  Class     Class[]
  Seat      Seat[]
}
